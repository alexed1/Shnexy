@using Data.Interfaces
@using StructureMap
@model KwasantWeb.ViewModels.UserVM
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }

<div style="padding-right: 40px;">
    <form id="userInfoForm">
        <table>
            <thead>
                <tr>
                    <th style="min-width: 150px"></th>
                    <th></th>
                </tr>
            </thead>
            <tr>
                <td>First Name 
                </td>
                <td>@Html.TextBoxFor(curUser => curUser.FirstName, new { id = "firstname" })
                </td>
            </tr>
            <tr>
                <td>Last Name 
                </td>
                <td>@Html.TextBoxFor(curUser => curUser.LastName, new { id = "lastname" })
                </td>
            </tr>
            <tr>
                <td>Email Address
                </td>
                <td>@Html.TextBoxFor(curUser => curUser.EmailAddress, new { id = "email" })
                </td>
            </tr>
            <tr id="trEmailIdField">
                <td>Email ID
                </td>
                <td>@Html.TextBoxFor(curUser => curUser.EmailAddressID, new { id = "emailId", disabled = "disabled" })
                    @Html.HiddenFor(curUser => curUser.EmailAddressID)
                </td>
            </tr>
            <tr>
                <td>New password
                </td>
                <td>
                    <input type="text" id="newPassword" />
                </td>
            </tr>
            <tr>
                <td>Roles
                </td>
                <td>
                    @Html.Partial("UserRoles")
                </td>
            </tr>
            <tr>
                <td colspan="2">@Html.Partial("ShowUserCreationSettings")
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr id="trNewUser">
                <td colspan="2">
                    <input type="button" id="btnSave" value="Save" />&nbsp;&nbsp;
                    <input type="button" id="btnCancel" value="Cancel" />&nbsp;&nbsp;
                    <input type="button" id="btnDelete" value="Delete" onclick="updateStatus(@Data.States.UserState.Deleted)" />
                    <input type="button" id="btnActivate" value="Activate" onclick="updateStatus(@Data.States.UserState.Active)" />
                </td>
            </tr>
            <tr id="trEditUser" style="display: none;">
                <td>
                    <input type="button" id="btnEdit" value="Edit" />
                </td>
            </tr>
        </table>
        <input id="hdnUserId" type="hidden" value="@Model.Id" />
        <br />
        <a style="color: #428bca; text-decoration: underline;" href="/Profile/ProfilesForUser?userID=@Model.Id">View Profiles</a>
    </form>

</div>
<script>
    //Document ready function, will run after page is ready and all elements are loaded.
    $(document).ready(function () {

        //Show/Hide user status buttons
        toggleStatusButtons(@Model.Status);

        //Binding click function to cancel button
        $("#btnCancel").click(function () {
            if ($("#hdnUserId").val() != "") {
                toggleFields(true);
                $("#firstname").val("@Model.FirstName");
                $("#lastname").val("@Model.LastName");
                $("#email").val("@Model.EmailAddress");
            }
            else {
                window.location.href = "@Url.Action("Dashboard", "Admin")";
            }
        });

        $("#btnEdit").click(function () {
            toggleFields(false);
        });

        //Binding click event handler to Save button.
        $("#btnSave").click(function () {
            var dataObj = {};
            dataObj.Id = '@Model.Id';
            dataObj.FirstName = $("#firstname").val();
            dataObj.LastName = $("#lastname").val();
            dataObj.EmailAddress = $("#email").val();
            dataObj.NewPassword = $("#newPassword").val();
            dataObj.Roles = "";
            dataObj.SendMail = $("#chkSendEmail").prop("checked");

            $.each($('.roleOptions'), function(i, o) {
                var wrappedObj = $(o);
                if (wrappedObj.is(':selected'))
                    dataObj.Roles = wrappedObj.val();
            });

            var dataStr = JSON.stringify(dataObj);

            $.ajax({
                url: '@Url.Action("Update", "User")',
                type: 'POST',
                contentType: 'application/json',
                data: dataStr,
                success: function (response) {
                    var resp = JSON.parse(response);
                    if(resp.data == "User already exists.")
                    {
                        displayNotification("User already exists");
                        existingUserAlert(resp.user_id);
                    }
                    else if(dataObj.Id == ''){
                        displayNotification("User created successfully");
                        resetFields();
                    }
                    else{
                        displayNotification("User updated successfully");
                        toggleFields(true);
                    }
                }
            });
        });
    });

    //toggle fields state, enabling/disabling the user text fields to switch user form Mode
    function toggleFields(state) {
        $("#firstname").prop("disabled", state);
        $("#lastname").prop("disabled", state);
        $("#email").prop("disabled", state);
        $("#trNewUser").toggle();
        $("#trEditUser").toggle();
    }

    //Click function to update user Status
    function updateStatus(status)
    {
        if(confirm("Are you sure?")){
            $.ajax({
                url: '@Url.Action("UpdateStatus", "User")',
                type: 'GET',
                contentType: 'application/json',
                data: { userId: '@Model.Id', status: status },
                success: function () {
                    toggleStatusButtons(status);
                }
            });
        }
    }

    //function to Show/Hide user status buttons
    function toggleStatusButtons(status)
    {
        if (status == "@Data.States.UserState.Active"){
            $("#btnActivate").hide();
            $("#btnDelete").show();
        }
        else {
            $("#btnActivate").show();
            $("#btnDelete").hide();
        }
        if("@Model.Id" == "")
        {
            $("#trEmailIdField").hide();
        }
    } 

    //function to clear all fields in the form
    function resetFields()
    {
        $("#firstname").val("");
        $("#lastname").val("");
        $("#email").val("");
        $("#newPassword").val("");
    }

    //popup to display when user already exists.
    function existingUserAlert(userId)
    {
        Kwasant.IFrame.Display('ExistingUserAlert?UserId='+userId,
	            {
	                modal: true,
	                callback: function (result) {
	                    if (result)
	                        close();
	                }
	            });
    }
</script>

