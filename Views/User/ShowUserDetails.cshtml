@using Data.Interfaces
@using StructureMap
@model KwasantWeb.ViewModels.UserVM
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }
<div style="padding-right: 40px;">
    <form id="userInfoForm">
        <table>
            <tr>
                <td colspan="2">
                    <label id="lblSaveError" style="color: red;"></label>
                </td>
            </tr>
            <tr>
                <td>First Name 
                </td>
                <td>
                    @Html.TextBoxFor(curUser => curUser.FirstName, new { id = "firstname" })
                </td>
            </tr>
            <tr>
                <td>Last Name 
                </td>
                <td>
                    @Html.TextBoxFor(curUser => curUser.LastName, new { id = "lastname" })
                </td>
            </tr>
            <tr>
                <td>Email Address
                </td>
                <td>
                    @Html.TextBoxFor(curUser => curUser.EmailAddress, new { id = "email" })
                </td>
            </tr>
            <tr>
                <td>Email ID
                </td>
                <td>
                    @Html.TextBoxFor(curUser => curUser.EmailAddressID, new { id = "emailId", disabled = "disabled" })
                    @Html.HiddenFor(curUser => curUser.EmailAddressID)
                </td>
            </tr>
            <tr>
                <td>Roles
                </td>
                <td>
                    @{
                        using (var uow = ObjectFactory.GetInstance<IUnitOfWork>())
                        {
                            var allRows = uow.AspNetRolesRepository.GetAll();
                            foreach (var role in allRows)
                            {
                                <input id="@role.Id" type="checkbox" class="roleCheckbox" value="@role.Name" @Html.Raw(Model.Roles.Contains(role.Name) ? "checked" : String.Empty)/>
                                <label for="@role.Id">@role.Name</label>
                                <br/>
                            }
                        }
                    }
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    @Html.Partial("ShowUserCreationSettings")
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr id="trNewUser">
                <td colspan="2">
                    <input type="button" id="btnSave" value="Save" />&nbsp;&nbsp;
                    <input type="button" id="btnCancel" value="Cancel" /></td>
            </tr>
            <tr id="trEditUser" style="display: none;">
                <td>
                    <input type="button" id="btnEdit" value="Edit" />
                </td>
            </tr>
        </table>
        <input id="hdnUserId" type="hidden" value="@Model.Id" />
        <br />
        <a style="color: #428bca; text-decoration: underline;" href="/Profile/ProfilesForUser?userID=@Model.Id">View Profiles</a>
    </form>
</div>
<script>
    //Document ready function, will run after page is ready and all elements are loaded.
    $(document).ready(function () {
        //Binding click function to cancel button
        $("#btnCancel").click(function () {
            if ($("#hdnUserId").val() != "") {
                toggleFields(true);
                $("#firstname").val("@Model.FirstName");
                $("#lastname").val("@Model.LastName");
                $("#email").val("@Model.EmailAddress");
            }
            else {
                window.location.href = "@Url.Action("Dashboard", "Admin")";
            }
        });

        $("#btnEdit").click(function() {
            toggleFields(false);
        });

        //Binding click event handler to Save button.
        $("#btnSave").click(function () {
            var dataObj = {};
            dataObj.Id = '@Model.Id';
            dataObj.FirstName = $("#firstname").val();
            dataObj.LastName = $("#lastname").val();
            dataObj.EmailAddress = $("#email").val();
            dataObj.Roles = [];
            dataObj.SendMail = $("#chkSendEmail").prop("checked");
            $.each($('.roleCheckbox'), function(i, o) {
                var wrappedObj = $(o);
                if (wrappedObj.is(':checked'))
                    dataObj.Roles.push(wrappedObj.val());
            });

            var dataStr = JSON.stringify(dataObj);

            $.ajax({
                url: '@Url.Action("Update", "User")',
                type: 'POST',
                contentType: 'application/json',
                data: dataStr,
                success: function () {
                    $("#lblSaveError").html("User updated successfully");
                    toggleFields(true);
                }
            });
        });
    });

    //toggle fields state, enabling/disabling the user text fields to switch user form Mode
    function toggleFields(state) {
        $("#firstname").prop("disabled", state);
        $("#lastname").prop("disabled", state);
        $("#email").prop("disabled", state);
        $("#role").prop("disabled", state);
        $("#trNewUser").toggle();
        $("#trEditUser").toggle();
    }
</script>

