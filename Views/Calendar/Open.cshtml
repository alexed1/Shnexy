@model Data.Entities.EventDO
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }

<header>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Media/select2.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="/Scripts/select2.js"> </script>
    
    <!-- jQuery.Validate -->
    <script type="text/javascript" src="/Scripts/jquery.validate.js"> </script>
    
    <!-- bootstrap -->
    <script type="text/javascript" src="/Scripts/bootstrap.js"> </script>

    <!-- bootstrap.datetimepicker -->
    <script type="text/javascript" src="/Scripts/moment.js"> </script>
    <script type="text/javascript" src="/Scripts/bootstrap-datetimepicker.js"> </script>
    <link href="/Content/bootstrap-datetimepicker.css" rel="stylesheet" type="text/css" />
    
    <style>
        .glyphicon-calendar:before {
            content: "\e109"; /* This was broken in the bootstrap css...?? */
        }
    </style>
    
    <script type="text/javascript">
        $(document).ready(function() {
            var hideShowDates = function() {
                if ($('#chkAllDay').attr('checked')) {
                    $('#dateGroup').slideUp();
                } else {
                    $('#dateGroup').slideDown();
                }
            };
            $('#chkAllDay').click(hideShowDates);
            hideShowDates();
            var data = [@Html.Raw(String.Join(",", Model.Attendees.Select(a =>
                            "{id: '" + a.EmailAddress + "', text: '" + a.EmailAddress + "'}"
                            )))];

            $('#attendeesSel').select2({
                createSearchChoice: function(term) {
                    return { id: term, text: term };
                },
                validateFormat: function(term) {
                    var atPos = term.indexOf('@@');
                    var dotPos = term.lastIndexOf('.');
                    if (atPos < 1 || (dotPos - atPos < 2) || (term.length - 2 <= dotPos)) {
                        return "Invalid Email";
                    }
                    return null;
                },
                multiple: true,
                data: [],
                width: '100%',
            });
            $('#attendeesSel').select2('data', data);
        });
    </script>
</header>
<form id="f" method="post" action="@Url.Action("BeforeSave")">
    <h3>
        @Html.Raw(Model.EventID == 0 ? "New Event" : "Editing Event")
    </h3>
    <hr />
    <div>Summary</div>
    <br />
    <div>
        <input id="summary" name="Summary" class="form-control col-md-1" value="@Model.Summary" required />
    </div>
    <br />
    <div>
        <div style="display:inline-flex">
            <p style="padding-right:15px;">When</p>
            <label>
                <input id="chkAllDay" type="checkbox" name="IsAllDay" @Html.Raw(Model.IsAllDay ? "checked='checked'" : String.Empty) /> All day event
            </label>
        </div>
    </div>
    <div id="dateGroup">
        <div style="display:inline-flex">
            <div class='col-md-4' style="padding-left: 0">
                <div class="form-group">
                    <div class='input-group date' id='fromDate' data-date-format="MM/DD/YYYY hh:mm a">
                        <input type='text' name="DateStart" class="form-control" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class='col-md-4' style="padding-left: 4px;">
                <label style="padding-top: 6px; font-weight: normal">to</label>
            </div>
            <div class='col-md-4' style="padding-right: 0">
                <div class="form-group">
                    <div class='input-group date' id='toDate' data-date-format="MM/DD/YYYY hh:mm a">
                        <input type='text' name="DateEnd" class="form-control" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div>Location</div>
    <div>
        <input id="location" name="Location" class="form-control col-md-1" value="@Model.Location" required />
    </div>
    <br />
    <div>Description</div>
    <div>
        <textarea id="description" name="Description" cols="31" rows="3" class="form-control col-md-1" required>@Html.Raw(Model.Description)</textarea>
    </div>
    <br />

    <div>Attendees</div>
    <div>
        <input type="hidden" name="Attendees" id="attendeesSel" />
    </div>
    <br />
    @{
        <div style="display: none">
            @Html.TextBox("EventID", @Model.EventID, new { @class = "form-control col-md-1" })
        </div>
    }
    <hr />
    <div class="space">
        <div style="clear: both">
            <div style="float: left">
                <input id="btnSave" type="submit" value="OK" style="border: 2px solid black; height: 30px; margin-right: 20px; width: 100px;" />
            </div>
            <div style="float: left">
                <a href="javascript:close()"><div style="width: 100px;">Cancel</div></a>
            </div>
        </div>
        <br />
        <br />
    </div>
</form>

<script type="text/javascript">
    function close(result) {
        if (parent && parent.DayPilot && parent.DayPilot.ModalStatic) {
            parent.DayPilot.ModalStatic.close(result);
        }
    }

    $("#f").submit(function () {
        var f = $("#f");
        if (!f.valid())
            return false;
        
        var url = f.prop('action') + '/?' + f.serialize();
        var m = new parent.DayPilot.Modal();
        m.closed = function() {
            if (this.result == "OK") {
                close(this.result);
            }
        };

        m.showUrl(url);

        return false;
    });

    $(function() {
        $("#summary").focus();
        $('#f').validate();
    });
    
    $(function () {
        var fromDate = $('#fromDate');
        var toDate = $('#toDate');

        fromDate.datetimepicker();
        toDate.datetimepicker();
        
        $("#fromDate").on("dp.change", function (e) {
            toDate.data("DateTimePicker").setMinDate(e.date);
        });
        $("#toDate").on("dp.change", function (e) {
            fromDate.data("DateTimePicker").setMaxDate(e.date);
        });

        fromDate.data("DateTimePicker").setDate('@Model.StartDate.ToString("MM/dd/yyyy hh:mm tt")');
        toDate.data("DateTimePicker").setDate('@Model.EndDate.ToString("MM/dd/yyyy hh:mm tt")');
    });

</script>