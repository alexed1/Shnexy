@model Data.Entities.EmailDO
@using DayPilot.Web.Mvc
@using DayPilot.Web.Mvc.Enums
@using DayPilot.Web.Mvc.Enums.Calendar
@using DayPilot.Web.Mvc.Events.Calendar

@{
    ViewBag.Title = "Event ";
}

<header>
    @*<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.8.1.min.js")"></script>*@
    @*<link href="@Url.Content("~/Content/Daypilot.css")" rel="stylesheet" />*@

</header>

<div class="jumbotron" style="padding-left:20px; padding-right:20px; min-width: 1130px;">
    <div class="row" style="font-size:0.84em">
        <div id="emailInfoBox" class="col-md-4 container_box" style="padding-top:45px; padding-bottom:39px;">
            <div class="row">
                <div class="col-md-2 label_vertical_alignment">
                    <div>From:</div>
                </div>
                <div class="col-md-9 label_vertical_alignment">
                    <div class="bookingAgentFormControlBorder">@Html.DisplayFor(model => model.From.Address)</div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-10 divider_height">
                </div>
            </div>

            <div class="row">
                <div class="col-md-2 label_vertical_alignment">
                    <div>Subject:</div>
                </div>
                <div class="col-md-9 label_vertical_alignment">
                    <div class="bookingAgentFormControlBorder">@Html.DisplayFor(model => model.Subject)</div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-10 divider_height">
                </div>
            </div>

            <div class="row">
                <div class="col-md-2 label_vertical_alignment">
                    <div>To:</div>
                </div>
                <div class="col-md-9">
                    <div class="bookingAgentFormControlBorder">
                        @{
                            string toEmailAddresses = String.Join(",", Model.To.Select(a => a.Address));

                            <span>@toEmailAddresses</span>
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-10 divider_height">
                </div>
            </div>

            <div class="row">
                <div class="col-md-2 label_vertical_alignment">
                    <div>CC:</div>
                </div>
                <div class="col-md-9">
                    <div class="bookingAgentFormControlBorder">
                        @{
                            string cCEmailAddresses = String.Join(",", Model.CC.Select(a => a.Address));

                            <span>@cCEmailAddresses</span>
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-10 divider_height">
                </div>
            </div>

            <div class="row">
                <div class="col-md-2 label_vertical_alignment">
                    <div>Bcc:</div>
                </div>
                <div class="col-md-9">
                    <div class="bookingAgentFormControlBorder">
                        @{
                            string bCCEmailAddresses = String.Join(",", Model.BCC.Select(a => a.Address));

                            <span>@bCCEmailAddresses</span>
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-10 divider_height">
                </div>
            </div>

            <div class="row">
                <div class="col-md-2 label_vertical_alignment">
                    <div>Body:</div>
                </div>
                <div class="col-md-9">
                    <div style="height: 200px" class="bookingAgentFormControlBorder">
                        @Html.DisplayFor(model => model.Text)
                    </div>
                </div>
            </div>
        </div>

        <div id="divCalender" class="col-md-6 container_box" style="padding-bottom: 79px;">
            <div class="row">
                <div id="toolbar" style="position:relative; left:-10px">
                    <a href="#" id="toolbar_day">Day</a>
                    <a href="#" id="toolbar_week">Week</a>
                    <a href="#" id="toolbar_month">Month</a>
                </div>
            </div>
            <div class="row">
                <div style="padding-right:5px">
                    @Html.DayPilotMenu("menu1", new DayPilotMenuConfig
                    {
                        Items = new MenuItemCollection()
                        {
                            new MenuItem { Text = "Delete", Action = MenuItemAction.JavaScript, JavaScript = "eventDelete(e)"}
                        }
                    })

                    @Html.DayPilotMenu("menu2", new DayPilotMenuConfig
                    {
                        Items = new MenuItemCollection()
                        {
                            new MenuItem { Text = "Open", Action = MenuItemAction.JavaScript, JavaScript = "alert(e.value());"}
                        }
                    })

                    @Html.DayPilotBubble("bubble")

                    @Html.DayPilotCalendar("dp_day", new DayPilotCalendarConfig
                    {
                        BackendUrl = Url.Content("~/Calendar/Day"),
                        
                        EventMoveHandling = EventMoveHandlingType.JavaScript,
                        EventResizeHandling = EventResizeHandlingType.JavaScript,
                        TimeRangeSelectedHandling = TimeRangeSelectedHandlingType.JavaScript,
                        EventClickHandling = EventClickHandlingType.JavaScript,
                        HeaderClickHandling = HeaderClickHandlingType.JavaScript,
                        EventDeleteHandling = EventDeleteHandlingType.JavaScript,
                        
                        Height = 550,
                        HeaderHeight = 50,
                        CellHeight = 25,
                        CssOnly = true,
                        ContextMenu = "menu1",
                        CssClassPrefix = "calendar_white",
                        ViewType = DayPilot.Web.Mvc.Enums.Calendar.ViewType.Day,

                        EventClickJavaScript = "eventClick(e)",
                        EventMoveJavaScript = "eventMove(e, newStart, newEnd)",
                        EventResizeJavaScript = "eventMove(e, newStart, newEnd)",
                        TimeRangeSelectedJavaScript = "eventNew(start, end, resource)",
                        EventDeleteJavaScript = "eventDelete(e)",
                    })

                    @Html.DayPilotCalendar("dp_week", new DayPilotCalendarConfig
                    {
                        ViewType = DayPilot.Web.Mvc.Enums.Calendar.ViewType.Week,
                        BackendUrl = Url.Content("~/Calendar/Backend/"),
                        
                        EventMoveHandling = EventMoveHandlingType.JavaScript,
                        EventResizeHandling = EventResizeHandlingType.JavaScript,
                        TimeRangeSelectedHandling = TimeRangeSelectedHandlingType.JavaScript,
                        EventClickHandling = EventClickHandlingType.JavaScript,
                        HeaderClickHandling = HeaderClickHandlingType.JavaScript,
                        EventDeleteHandling = EventDeleteHandlingType.JavaScript,

                        ShowAllDayEvents = true,
                        AllowMultiSelect = true,
                        Height = 550,
                        HeaderHeight = 20,
                        CssOnly = true,
                        CssClassPrefix = "calendar_white",
                        HeightSpec = HeightSpec.BusinessHours,
                        EventBubble = "bubble",
                        EventClickJavaScript = "eventClick(e)",
                        EventMoveJavaScript = "eventMove(e, newStart, newEnd)",
                        EventResizeJavaScript = "eventMove(e, newStart, newEnd)",
                        TimeRangeSelectedJavaScript = "eventNew(start, end, resource)",
                        EventDeleteJavaScript = "eventDelete(e)",
                        ContextMenu = "menu1",
                        HeaderClickJavaScript = "alert('Day clicked: ' + c.date);"
                    })

                    @Html.DayPilotMonth("dp_month", new DayPilotMonthConfig
                    {
                        BackendUrl = Url.Content("~/Calendar/Month"),

                        EventMoveHandling = DayPilot.Web.Mvc.Events.Month.EventMoveHandlingType.JavaScript,
                        EventResizeHandling = DayPilot.Web.Mvc.Events.Month.EventResizeHandlingType.JavaScript,
                        TimeRangeSelectedHandling = DayPilot.Web.Mvc.Events.Month.TimeRangeSelectedHandlingType.JavaScript,
                        EventClickHandling = DayPilot.Web.Mvc.Events.Month.EventClickHandlingType.JavaScript,
                        HeaderClickHandling = DayPilot.Web.Mvc.Events.Month.HeaderClickHandlingType.JavaScript,
                        
                        
                        CellHeaderFontSize = "10",
                        CellHeight = 90,
                        HeaderHeight = 50,
                        EventHeight = 50,
                        Height = "550",
                        CssOnly = true,
                        ContextMenu = "menu1",
                        CssClassPrefix = "calendar_white",

                        EventClickJavaScript = "eventClick(e)",
                        EventMoveJavaScript = "eventMove(e, newStart, newEnd)",
                        EventResizeJavaScript = "eventMove(e, newStart, newEnd)",
                        TimeRangeSelectedJavaScript = "eventNew(start, end)",
                    })
                </div>
                
            </div>
        </div>
        
        <div class="col-lg-2 container_box" style="padding-top:53px; padding-bottom:101px; position:relative; float:left;">
            @Html.DayPilotNavigator("dp_navigator", new DayPilotNavigatorConfig
            {
                CssOnly = true,
                CssClassPrefix = "navigator_white",
                ShowMonths = 1
            })
        </div>

    </div>
</div>
<div class="row">
    @Html.ActionLink("Back to booking requests", "Index", "Email")
</div>
<div class="row">
    @Html.ActionLink("Show Users", "Index", "User")
</div>


<script type="text/javascript">

    $("#toolbar_day").click(function () {
        $("#divCalender").css("padding-bottom", "79px");
    });

    $("#toolbar_week").click(function () {
        $("#divCalender").css("padding-bottom", "170px");
    });

    $("#toolbar_month").click(function () {
        $("#divCalender").css("padding-bottom", "79px");
    });

    var switcher = new DayPilot.Switcher();

    switcher.addView(dp_day);
    switcher.addView(dp_week);
    switcher.addView(dp_month);

    switcher.addButton("toolbar_day", dp_day);
    switcher.addButton("toolbar_week", dp_week);
    switcher.addButton("toolbar_month", dp_month);

    switcher.addNavigator(dp_navigator);

    switcher.show(dp_day);
    

    function displayForm(url) {
        var m = new DayPilot.Modal();
        m.width = 560;
        m.closed = function () {
            var daypilotControls = [
                dp_day,
                dp_week,
                dp_month
            ];

            if (this.result == "OK") {
                $.each(daypilotControls, function (i, ele) {
                    ele.commandCallBack('refresh');
                });
            }
            $.each(daypilotControls, function (i, ele) {
                ele.clearSelection('refresh');
            });
        };

        m.showUrl(url);
    }

    function eventClick(e) {
        displayForm(getBaseCalendarURL() + '/Open/?eventID=' + e.id());
    }

    function eventNew(start, end) {
        displayForm(getBaseCalendarURL() + '/New/?start=' + start + '&end=' + end);
    }

    function eventMove(e, newStart, newEnd) {
        displayForm(getBaseCalendarURL() + '/MoveEvent/?eventID=' + e.id() + '&newStart=' + newStart + '&newEnd=' + newEnd);
    }

    function eventDelete(e) {
        displayForm(getBaseCalendarURL() + '/DeleteEvent/?eventID=' + e.id());
    }

</script>