@using Data.States
@model KwasantWeb.ViewModels.CalendarViewModel
@{ Layout = "~/Views/Shared/_Layout.cshtml"; }
@{
	ViewBag.Title = "Event ";
}
@section styles{
    @Styles.Render("~/bundles/css/daypilot")
}
@section immediateScripts
{
	@Scripts.Render("~/bundles/js/jquery")
	@Scripts.Render("~/bundles/js/daypilot")
    @Scripts.Render("~/bundles/js/kwasantcalendar")
    @Scripts.Render("~/bundles/js/kwasantpopup")

    <script src="~/Scripts/DataTables-1.10.0/media/js/jquery.dataTables.js"></script>
    <link href="~/Content/DataTables-1.10.0/media/css/jquery.dataTables.css" rel="stylesheet" />
}
@section scripts
{
    @Scripts.Render("~/bundles/js/modernizr")
    @Scripts.Render("~/bundles/js/bootstrap")
    @Scripts.Render("~/bundles/js/common")
}

@*width: 1270px;*@
<div class="jumbotron calendar-section jumbotron_new">
	<div class="row">
        @*width: 420px;*@	
		<nav class="navbar navbar-default top-toolbar-section" role="navigation">
			<div class="container-fluid">
				<div class="navbar-header">
					<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>
				<div class="collapse navbar-collapse" id="navbar-collapse">
					<ul class="nav navbar-nav">
					    <!--<li><a id="btnProcessed" onclick="updateStatus('@Url.Action("SetStatus", "BookingRequest", new { id = Model.BookingRequestID, status = BookingRequestState.Processed })');" href="#">Mark Processed</a></li> -->
                        <li><a id="btnRequestClarification" class="btnRequestClarification" href="#">Request Clarification</a></li>
                        <li class="dropdown"><a id="btnBookingRequest">BookingRequest</a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Get All", "Index", "BookingRequest")</li>
                            </ul>   
                        </li>
						<li class="dropdown"><a id="btnUser">User</a>
                            <ul class="dropdown-menu">
                                 <li> @Html.ActionLink("Get All", "Index", "User") </li>
                                 <li><a id="btnProcessed" onclick="updateStatus('@Url.Action("MarkAsProcessed", "BookingRequest", new { id = Model.BookingRequestID })');" href="#">Mark Processed</a></li>
                            </ul>
    					</li>
                        <li class="dropdown"><a id="btnNegotiation">Negotiation</a>
                             <ul class="dropdown-menu">
                                <li><a id="liCreateOrEditNegotiation" onclick="window.parent.getNegotiationWindow();" data-value='@(Model.LinkedNegotiationID == null ? "Create" : "Edit")' href="#">@(Model.LinkedNegotiationID == null ? "Create" : "Edit")</a></li>
                                <li id="liDeleteNegotiatoin"><a id="btnDeleteNegotiatoin" onclick="deleteActiveNegotiation(@Model.BookingRequestID);" href="#">Delete</a></li>
                            </ul>
                        </li>
                        <li class="dropdown"><a id="btnReport">Reports</a>
                            <ul class="dropdown-menu">
                                <li><a id="btnHistory" onclick="HistoryClick(@Model.BookingRequestID);" class="btnHistory" href="#">Show History</a></li>
                            </ul>
                        </li>
					</ul>
				</div>
			</div>
		</nav>
		<div id="emailInfoBox" class="col-md-7">
			<div class="emailInfoBox">
				<iframe id="emailInfoFrame" class="frminfo" onload=" emailFrameLoaded()" src="/Api/GetEmailHTML.aspx?emailID=@Model.BookingRequestID"></iframe>
				<div class="">
					<input type="radio" id="rdnshowOtherBRs" name="group1" value="ShowOtherBRs" /> Show Other BR's  &nbsp;&nbsp; 
					<input type="radio" id="rdnShowRelatedItems" name="group1" value="ShowRelatedItems" checked="checked" />Show Related Items
				</div>
				<table id="tblRelatedItems" class="email-info-table data-table">
					<thead>
						<tr>
							<th>Date</th>
							<th>Type</th>
						</tr>
					</thead>
				</table>
				<table id="tbluserrequests" class="email-info-table data-table">
					<thead>
						<tr>
							<th>Date Received</th>
							<th>Subject</th>
						</tr>
					</thead>
				</table>
			</div>
        </div>
		<div id="CalendarDiv" class="col-md-5"></div>

	</div>
</div>
<input type="hidden" value="@Model.BookingRequestID" id="hdnrequestid" name="requestid" />

<script type="text/javascript">
    var calendar;
    var dp_navigator,storedCalendar;
    $(function() {
        calendar = $('#CalendarDiv').KCalendar({
            getCalendarBackendURL: function() {
                //return '@Url.Content("~/Calendar/Day?calendarIDs=" + String.Join(",", Model.LinkedCalendarIDs))';
                return '@Url.Content("~/Calendar/Day?calendarIDs=" + @Model.ActiveCalendarID)';
            },
            getMonthBackendURL: function () {
                //return '@Url.Content("~/Calendar/Month?calendarIDs=" + String.Join(",", Model.LinkedCalendarIDs))';
                return '@Url.Content("~/Calendar/Month?calendarIDs=" + @Model.ActiveCalendarID)';
            },
            getNavigatorBackendURL: function() {
                //return '@Url.Content("~/Calendar/Navigator?calendarIDs=" + String.Join(",", Model.LinkedCalendarIDs))';
                return '@Url.Content("~/Calendar/Navigator?calendarIDs=" + @Model.ActiveCalendarID)';
            },  
            getEditURL: function(id) { return '/Event/Edit/?eventID=' + id; },
            getMoveURL: function(id, newStart, newEnd) { return '/Event/MoveEvent/?eventID=' + id + '&newStart=' + newStart + 'z&newEnd=' + newEnd + 'z'; },
            getDeleteURL: function(id) { return '/Event/DeleteEvent/?eventID=' + id; },
            onEventNew: function(start, end) {
                if (Kwasant.IFrame.PopupsActive()) {
                    return;
                }
                var id = $("#hdnrequestid").val();
                Kwasant.IFrame.Display('/Event/New/?bookingRequestID=' + id + '&calendarID=' + @Model.ActiveCalendarID + '&start=' + start + 'z&end=' + end + 'z',
                    {
                        horizontalAlign: 'right',
                        callback: calendar.refreshCalendars
                    });
            },
        }
        );
    });
     
    //funtion to load booking request info in iframe "emailInfoFrame" on "tbluserrequests" request row click.
    //called by : rows in tbluserrequests on click
    function loadrequest(id, linkedCalendarIDs, ele) {
    	$("#tbluserrequests tr").removeClass('current-row');
    	if ($('#tbluserrequests tr').length > 2) {
    		$(ele).addClass('current-row');
    	}    
        $("#hdnrequestid").val(id);
        $("#btnProcessed").attr("onclick", "updateStatus('" + "@Url.Action("MarkAsProcessed", "BookingRequest", new { id = "requestid" })".replace("requestid", id) + "')");
        $("#emailInfoFrame")[0].contentWindow.location.replace("/Api/GetEmailHTML.aspx?emailID=" + id);
        
        if (calendar !== undefined) {
            calendar.updateBackendURLs("@Url.Content("~/Calendar/Day?calendarIDs=")" + linkedCalendarIDs, "@Url.Content("~/Calendar/Month?calendarIDs=")" + linkedCalendarIDs, "@Url.Content("~/Calendar/Navigator?calendarIDs=")" + linkedCalendarIDs);
        }
    }



    //Document ready function, will run after page is ready and all elements are loaded.
    $(document).ready(function () {
        showRelatedItems();
        $('#tbluserrequests').hide();

        storedCalendar = calendar.getStoredCalendar();
        dp_navigator = calendar.getNavigator();

    });

    //This function will bind a click function on every button in table "tblbookingrequest"
    $('#tbluserrequests').on('click', 'tr', function () {
        var data = table.row($(this)).data();
        loadrequest(data.id, data.linkedcalendarids, this);
    });

    $('#btnRequestClarification').click(function () {
        if (Kwasant.IFrame.PopupsActive()) { return false; }
        Kwasant.IFrame.Display('@Url.Action("Edit", "ClarificationRequest", new { bookingRequestId = Model.BookingRequestID })',
            {
                horizontalAlign: 'left',
            });
    });
   

    function emailFrameLoaded() {
        var iframe = $("#emailInfoFrame").get(0);
        if (iframe) {
            // here you can make the height, I delete it first, then I make it again
            iframe.height = "";
            iframe.height = (iframe.contentWindow.document.body.scrollHeight + 30) + "px";
        }
    }

    //function to format datetime of Request viewer widget
    function ConvertTODateString(dateFormat) {
        var datevalue = new Date(dateFormat);
        dateFormat = datevalue.getMonth() + 1 + "/" + datevalue.getDate() + "/" + datevalue.getFullYear() + " " + datevalue.getHours() + ":" + datevalue.getMinutes();
        return dateFormat;
    }

    //Mark processed function will execute on click to update the Request status to "Processed".
    function updateStatus(path) {
        $.getJSON(path, function () {
            window.location.href = "@Url.Action("Index", "BookingRequest")";
        });
    }

    function HistoryClick(id) {
        if (Kwasant.IFrame.PopupsActive()) { return; }
        Kwasant.IFrame.Display('/Report/HistoryByBookingRequestId?bookingRequestID=' + id,
            {
                horizontalAlign: 'left',
                callback: calendar.refreshCalendars
            });
    }

    
    $("#rdnShowRelatedItems").click(function () {
        showRelatedItems();
    });
  
    $("#rdnshowOtherBRs").click(function () {
        showOtherBRs();
    });

    var table;
    function showOtherBRs()
    {
        $('#tbluserrequests').show();
        $('#tblRelatedItems_wrapper').hide();

        //Parsing and binding the booking requests viewer
        table = $('#tbluserrequests').DataTable({
            destroy: true,
            order: [0, 'desc'],
            searching: false,
            ordering: false,
            bLengthChange: false,
            processing: true,
            serverSide: true, //Enabling server side processing
            ajax:
            {
                //Ajax call to get all unprocessed booking request from server according to user.
                "url": "@Url.Action("GetBookingRequests", "BookingRequest")" + "?bookingRequestId=" + "@Model.BookingRequestID",
            "dataSrc": function (json) {
                var orgdata = JSON.parse(json.data);
                return orgdata;
            }
        },
            //Callback function for row created.
            createdRow: function (row, data, index) {
            	if (data.id == $("#hdnrequestid").val() && $('#tbluserrequests tr').length > 2) {
                	$(row).addClass('current-row');
                }
                else {
                	$(row).removeClass('current-row');
                }
            },
        columns: [
            {
                data: function (data) {
                    return ConvertTODateString(data.date_received);
                }
            },
            { data: 'subject' }
        ]
    });

    var datenow = new Date();
    var dp_day = storedCalendar[0];
    dp_day.startDate = datenow;
    calendar.refreshCalendars();
    dp_navigator.select(new DayPilot.Date(datenow));
    }


    var table1;
    function showRelatedItems() {

        $('#tbluserrequests_wrapper').hide();
        table1 = $('#tblRelatedItems').DataTable({
            destroy: true,
            order: [0, 'desc'],
            searching: false,
            ordering: false,
            bLengthChange: false,
            processing: true,
            serverSide: true, 
            ajax:
            {
                "url": "@Url.Action("ShowRelatedItems", "BookingRequest")" + "?bookingRequestId=" + "@Model.BookingRequestID",
				"dataSrc": function (json) {
					var orgdata = JSON.parse(json.data);
					return orgdata;
				}
			},
            
        	createdRow: function (row, data, index) {
        		if (data.id == $("#hdnrequestid").val() && $('#tblRelatedItems tr').length > 2) {
        			$(row).addClass('current-row');
        		}
        		else {
        			$(row).removeClass('current-row');
        		}

               // $(row).attr("style", "cursor:pointer;");
            },
			columns: [
                {
                    data: function (data) {
                        return ConvertTODateString(data.date);
					}
                },
                { data: 'type' }
			]
		});

	}
   
	$('#tblRelatedItems').on('click', 'tr', function () {
		//$("#tblRelatedItems tr").attr("style", "background-color: none;cursor:pointer");
		//$(this).attr("style", "background-color: #aaa;");
		$('#tblRelatedItems tr').removeClass('current-row');
		if ( $('#tblRelatedItems tr').length > 2) {     	
			$(this).addClass('current-row');
		}
        var data = table1.row($(this)).data();
        var dp_day = storedCalendar[0];
        dp_day.startDate = data.date;
        calendar.refreshCalendars();
        var datevalue = new Date(data.date);
        dp_navigator.select(new DayPilot.Date(datevalue));
        if(data.type=="Clarification")
            clarificationPopUpWindow(data.id);
    });

    function clarificationPopUpWindow(id)
    {
        if (Kwasant.IFrame.PopupsActive()) { return false; }
        var bookingrequest="@Model.BookingRequestID";
        var path = '/ClarificationRequest/Edit/?bookingRequestId=' + bookingrequest + '&clarificationRequestId=' + id;
        Kwasant.IFrame.Display(path,
        {
            horizontalAlign: 'left',
        });
    }

    
    //this function will open the new iframe for negotiation window and close the iframe for Edit Event window.
    function getNegotiationWindow() {
        @{
            if (Model.LinkedNegotiationID != null)
            {
                @:Kwasant.IFrame.Display('/Negotiation/Edit?negotiationID=@Model.LinkedNegotiationID',
                    @:{
                    @:  horizontalAlign: 'right',
                    @:});
            }
            else
            {
                @:Kwasant.IFrame.Display('/Negotiation/Create?bookingRequestID=@Model.BookingRequestID',
                    @:{
                    @:  horizontalAlign: 'right',
                    @:  callback: function (result) { if (result) $('#liCreateOrEditNegotiation').html('Edit'); }
                    @:});
            }
        }
    }

    function deleteActiveNegotiation(bookingRequestId)
    {
        if (confirm("are you sure you want to delete negotiation?")) {
            var url = "/BookingRequest/DeleteActiveNegotiation/?BookingRequestId=" + bookingRequestId;
            $.get(url, null, function (data) {
                if (data == "Success") {
                    alert(data);
                }
                else
                    alert(data);
            });
        }       
    }
  
    $(document).ready(function() {
        //alert('@(Model.LinkedNegotiationID == null ? "Create" : "Edit")');
        var getNegotiationText = '@(Model.LinkedNegotiationID == null ? "Create" : "Edit")';
        if(getNegotiationText == "Edit")
            $('#liDeleteNegotiatoin').show();
        else
            $('#liDeleteNegotiatoin').hide();

        $('.navbar .dropdown').hover(function() {
            $(this).find('.dropdown-menu').first().stop(true, true).slideDown(150);
        }, function() {
            $(this).find('.dropdown-menu').first().stop(true, true).slideUp(105)
        });
    });
</script>
