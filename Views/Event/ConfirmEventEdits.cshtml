@using Newtonsoft.Json
@model KwasantWeb.ViewModels.EventVM
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }
@section immediateScripts
{
    @Scripts.Render("~/bundles/js/jquery")
    @Scripts.Render("~/bundles/js/select2")
    @Scripts.Render("~/bundles/js/moment")
    @Scripts.Render("~/bundles/js/bootstrap-datetimepicker")
    @Scripts.Render("~/bundles/js/jqueryvalidate")
}
@section scripts
{
    @Scripts.Render("~/bundles/js/modernizr")
    @Scripts.Render("~/bundles/js/bootstrap")
    @Scripts.Render("~/bundles/js/common")
}
@section styles
{
    @Styles.Render("~/bundles/css/bootstrap30")
    @Styles.Render("~/bundles/css/backendcss")
    @Styles.Render("~/bundles/css/select2")
    @Styles.Render("~/bundles/css/bootstrap-datetimepicker")
	
}
<div class="light-bg">
	<form id="f" class="edit-event-form form" method="post" action="@Url.Action("Confirm")">
		<h3 class="with-border">Confirm Changes</h3>
		<div>You are <b>@Html.Raw(Model.Id == 0 ? "creating a new" : "editting an existing")</b> event.</div>
		<div style="@Html.Raw(Model.IsAllDay ? String.Empty : "display:none;")">
			<div>* All day event * - @Model.StartDate.ToString()</div>
		</div>
		<div style="@Html.Raw(Model.IsAllDay ? "display:none;" : String.Empty)">
			<div>Start Date: @Model.StartDate</div>
			<div>End Date: @Model.EndDate</div>
		</div>
		<div>Location: @Model.Location</div>
		<div>Summary: @Model.Summary</div>
		<div>Description: @Model.Description</div>
		<div>Attendees: @String.Join(", ", Model.Attendees)</div>
		<div class="space form-actions">
            <input id="btnSave" type="submit" value="CONFIRM" class="btn small-dialog-button shadow-button pull-left" />
            <a href="javascript:close()" class="cancel-btn btn small-dialog-button shadow-button pull-left">REJECT</a>
		</div>
	</form>
</div>
	<script type="text/javascript">
		function close(result) {
			if (parent && parent.DayPilot && parent.DayPilot.ModalStatic) {
				parent.DayPilot.ModalStatic.close(result);
			}
		}

		$(function () {
			$("#f").submit(function () {
				var f = $("#f");
				var data = @Html.Raw(JsonConvert.SerializeObject(Model));

				$.post(f.prop('action'), data, function (result) {
					var evaledRes = eval(result);
					close(evaledRes);
				});
				return false;
			});
		});
	</script>
