@*@model Data.Entities.NegotiationDO
@model KwasantWeb.ViewModels.NegotiationViewModel*@
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }
@section immediateScripts
{
    @Scripts.Render("~/bundles/js/jquery")
    @Scripts.Render("~/bundles/js/select2")    
    @Scripts.Render("~/bundles/js/jqueryvalidate")

<script src="/Content/js/Kwasant/Popup.js"></script>
<script>
    var url = "";
    var questionTemp = "";
    var textAnsTemp = "";
    var timesloteAnsTemp = "";
    var jsonResult = "";
    var id = parent.$("#hdnrequestid").val();

    $(document).ready(function () {
        var negAValue = parent.$("#btnNegotiation").attr("data-value");
        if (negAValue == "Edit Negotiation")
            deserializeForm();
        else {
            var negotiation = serializeForm();
            $.ajax({
                type: 'post',
                url: '@Url.Action("Create", "Negotiation")',
                data: { negotiation: JSON.stringify(negotiation) },
                success: function (data) {
                    var Success = data.Success;
                    var negotiationId = data.NegotiationId;
                    $('#divNegotiation').attr("data-negotiationId", negotiationId);
                }
            });
        }
    });

    function callAppendQuestion(ele) {
        var findquestionId = $(ele).closest("div").attr("data-questionid");
        var findquestiontblId = $(ele).closest("div").attr("data-questiontbleid");
        getCalltextanswer(ele, findquestionId, findquestiontblId);
    };

    var getAddQuestion = function (callfrom, countValue) {
        var questionCount;
        if (callfrom == "editneg")
            questionCount = countValue;
        else
            questionCount = $("#questionSet #question").length;

        $.ajax({
            type: 'Get',
            url: '@Url.Action("AddQuestion", "Negotiation")',
            data: { questionID: (questionCount + 1), negotiationId: $("#divNegotiation").attr("data-negotiationid") },
            success: function (data) {
                //alert(data.questionID);
                $("#questionSet").append(data);
                //alert(countValue);
            }
        });
    };

    var getCalltextanswer = function (ele, questionID, questiontblId) {
        var radiotype = $(ele).closest("table").find('.active:checked').val();

        if (radiotype == 'Timeslot') {
            $.ajax({
                type: 'Get',
                url: '@Url.Action("EditTimeslots", "Question")',
                data: { Id: questiontblId, BookingRequestID: id },
                success: function (data) {
                    //$(ele).closest("table").find("#appendanswerId").append(data);
                    Kwasant.IFrame.Display('/Negotiation/EventWindows/?id=' + data,
                    {
                        horizontalAlign: 'right',
                    });
                }
            });
        }
        else {
            url = '@Url.Action("AddtextAnswer", "Negotiation")';
        }

        var answerPresent = $("#questionSet #question[data-questionID=" + questionID + "] #appendanswerId #answerContainer").length;
        $.ajax({
            type: 'Get',
            url: url,
            data: { answerID: (answerPresent + 1), questiontblID: questiontblId },
            success: function (data) {
                $(ele).closest("table").find("#appendanswerId").append(data);
            }
        });
        }
    };

    var removetable = function (ele) {
        $(ele).closest("table").remove();
    }

    var removeQuestion = function (ele) {
        var findquestiontblId = $(ele).closest("div").attr("data-questiontbleid");
        var url = "/Negotiation/DeleteQuestion/?questionId=" + findquestiontblId;
        $.get(url, null, function (data) {
            if (data == "Success")
            { removetable(ele); }
            else
                alert("Exception Error!");
        });
    }

   var removeanswer = function (ele) {
       var findanswertblId = $(ele).closest("div").attr("data-answertbleid");
       var url = "/Negotiation/DeleteAnswer/?answerId=" + findanswertblId;
       $.get(url, null, function (data) {
           if (data == "Success") {
               removetable(ele);
           }
           else
               alert("Exception Error!");
       });
   }

    var handleNegotiationCancel = function (ele) {
        cancelNegotiation();
    }

    var serializeForm = function () {

        var negotiationTableId = $("#divNegotiation").attr("data-negotiationid");
        //var Negotiation = { Id: negotiationTableId, Name: null, Questions: [], State: 2 };
        var Negotiation = { Id: negotiationTableId, Name: null, Questions: [] };

        $.each($("#questionSet #question"), function () {
            //item = per question container with id = questionContainer.
            var qText = $(this).find('#questionText').val();
            var answersArray = [];
            var radiotype = $(this).find("input[checked='checked']").val();
            var answerContainer = $(this).find('#appendanswerId #answerContainer')

            $.each(answerContainer, function () {

                var aText = $(this).find('#answerText').val();
                var aStatus = $(this).find('#answerStatus').val();

                var answertbleid = $(this).attr("data-answertbleid")
                answersArray.push({ Id: answertbleid, Text: aText, AnswerStatusId: aStatus });
            });

            var questiontbleid = $(this).attr("data-questiontbleid")
            //Negotiation.Questions.push({ Id: questiontbleid, Text: qText, Answers: answersArray, AnswerType: radiotype, Status: "Unanswered" });
            Negotiation.Questions.push({ Id: questiontbleid, Text: qText, Answers: answersArray, AnswerType: radiotype });
        });

        Negotiation.Name = $("#NegName").val();

        return Negotiation;
    };

    var processSubmit = function () {
        var negotiation = serializeForm();
        console.log(negotiation);
        $.ajax({
            type: 'post',
            url: '@Url.Action("ProcessSubmittedForm", "Negotiation")',
            data: { negotiation: JSON.stringify(negotiation) },
            success: function (data) {
                var Success = data.Success;
                var bookingrequestid = data.BookingRequestID;
                var negotiationId = data.NegotiationId;
                //THIS SHOULD ALL BE DONE ON THE SERVER via THE NegotiationController
                //Call CommunicationManager
                //var data1 = { BookingRequestID: bookingrequestid, NegotiationId: negotiationId };
                //$.post('/CommunicationManager/DispatchNegotiationEmail/', { BookingRequestID: bookingrequestid, NegotiationId: negotiationId }, function (data) {
                //    var clarificationRequestId = data.ClarificationRequestId;
                //    $.post('/ClarificationRequest/Send/', { bookingRequestId: bookingrequestid, clarificationRequestId: clarificationRequestId, negotiationId: negotiationId }, function (data) {
                        closethis();
                        //alert("Done");
                    });
                });
            }
        });
    };

    var deserializeForm = function () {

        $.ajax({
            type: 'Get',
            url: '@Url.Action("AddQuestion", "Negotiation")',
            data: { questionID: (1) },
            success: function (data) {
                questionTemp = data;
            }
        });

        $.ajax({
            type: 'Get',
            url: '@Url.Action("AddtextAnswer", "Negotiation")',
            data: { answerID: (1) },
            success: function (data) {
                textAnsTemp = data;
            }
        });

        $.ajax({
            type: 'Get',
            url: '@Url.Action("AddTimeslotAnswer", "Negotiation")',
            data: { answerID: (1) },
            success: function (data) {
                timesloteAnsTemp = data;
            }
        });

        var countQueVal = 0;
        $.ajax({
            type: 'Get',
            url: '@Url.Action("ShowNegotiation", "Negotiation")',
            data: { id: (id) },
            success: function (data) {
                jsonResult = JSON.stringify(data);
                var objJSON = eval("(function(){return " + jsonResult + ";})()");
                $("#NegName").val(objJSON.Name);
                $('#divNegotiation').attr("data-negotiationId", objJSON.Id);

                $.each(objJSON.Questions, function () {

                    countQueVal = countQueVal + 1;
                    var temphtml = questionTemp;
                    //Assign Data-QuestionId
                    temphtml = $(temphtml).find("#question").attr("data-questionid", countQueVal);
                    //Append New Question on List
                    $("#questionSet").append(temphtml);
                    //Assigning Question Attributes
                    $(temphtml).attr("data-questiontbleid", this.Id);
                    var answerPresent = $("#questionSet #question[data-questionID=" + countQueVal + "]");
                    $(answerPresent).find('#questionlbl').text("Question :" + countQueVal);
                    $(answerPresent).find("#questionText").val(this.Text);

                    var countAnsVal = 0;
                    //Assigning Answers According to Questions
                    $.each(this.Answers, function () {
                        countAnsVal = countAnsVal + 1;
                        var tempanshtml = textAnsTemp;
                        tempanshtml = $(tempanshtml).find("#answerContainer").attr("data-answerid", countAnsVal);
                        $(tempanshtml).attr("data-answertbleid", this.Id);
                        $(answerPresent).find("#appendanswerId").append(tempanshtml);
                        $(tempanshtml).find("#answerText").val(this.ObjectsType);
                        $(tempanshtml).find("#answerlbl").text("A-" + countAnsVal);
                        $(tempanshtml).find("#answerStatus").val(this.AnswerStatusID);
                    });
                });
            }
        });

    };

    function closethis() {
        $(window.parent.document).find("iframe").each(function () {
            if ($(this).attr("style").indexOf("z-index") > 0) {
                if ($(this).attr("style").indexOf("display: none") < 0) {
                    $(this).remove();
                }
            }
        });
    };
</script>
}
@section scripts
{
	@Scripts.Render("~/bundles/js/moment")
	@Scripts.Render("~/bundles/js/bootstraptransition")
	@Scripts.Render("~/bundles/js/collapse")	
	@Scripts.Render("~/bundles/js/bootstrap")
	@Scripts.Render("~/bundles/js/bootstrap-datetimepicker")
    @Scripts.Render("~/bundles/js/modernizr")	
    @Scripts.Render("~/bundles/js/common")
}
@section styles
{
    @Styles.Render("~/bundles/css/bootstrap30")
    @Styles.Render("~/bundles/css/backendcss")
    @Styles.Render("~/bundles/css/select2")
    @Styles.Render("~/bundles/css/bootstrap-datetimepicker")
	@Styles.Render("~/bundles/css/temp")
	<link href="@Url.Content("~/Content/css/additionalcss/font-awesome/css/font-awesome.css")" rel="stylesheet" type="text/css" />
}

<form id="f">
    <div class="form-horizontal" data-negotiationId="0" id="divNegotiation">
        <h4>Negotiation</h4>
        <hr />
        <div class="form-group">
            <table>
                <tr>
                    <td>&nbsp; 
                        <label>Name:</label>
                    </td>
                    <td>
                        <input type="text" id="NegName" name="NegNameId" value="Negotiation 1" />
                    </td>
                </tr>
            </table>
        </div>
        <div id="questionSet">

        </div>
        

        <span class="form-group" id="divAddQuestion" onclick="getAddQuestion()">
      @*<span class="form-group" id="divAddQuestion" onclick="deserializeForm()">*@
      &nbsp; &nbsp;
            <img src="~/Content/img/plus.png" />
            <label>Add Question</label>
        </span>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Ok" class="btn btn-default" onclick="processSubmit()" />
                &nbsp; &nbsp;
                <a href="#" onclick="closethis();">Cancel</a>
            </div>
        </div>
    </div>
</form>
