@using Data.States
@using KwasantWeb.ViewModels
@using Newtonsoft.Json
@model KwasantWeb.ViewModels.NegotiationResponseVM
@{ Layout = "~/Views/Shared/_Layout.cshtml"; }
@section immediateScripts
{
    @Scripts.Render("~/bundles/js/select2")
    
    @Scripts.Render("~/bundles/js/jqueryvalidate")
    

    <script src="/Content/js/KwasantCommon.js" type="text/javascript"></script>
    <script src="/Content/js/Kwasant/Popup.js"></script>
    <link rel="stylesheet" type="text/css" href="/Content/css/NegotiationWidgets.css" />

    <script src="/Content/js/Kwasant/NegotiationWidgets.js" type="text/javascript"></script>

    <script type="text/javascript">
        var widget;
        $(function() {
            var settings = {
                DisplayMode: 'reply',
                PrefixQuestionText:'',
                MaxAdditionalAnswers: 1,

                AllowModifyNegotiationRequest: false,

                AllowAddQuestion: false,
                AllowModifyQuestion: false,
                AllowDeleteQuestion: false,

                AllowAddAnswer: false,
                AllowModifyAnswer: false,
                AllowDeleteAnswer: false,
            };

            var questions = @Html.Raw(JsonConvert.SerializeObject(Model.Questions));

            var initialValues = {
                Id: @(Model.Id == null ? "null" : Model.Id.ToString()),
                BookingRequestID: @Model.BookingRequestID,
                Name: '@Model.Name',
                Questions: questions
            };


            widget = $('#negotiation').NegotiationWidget(settings, initialValues);
        });

        function submitResponse() {
            var spinner = Kwasant.IFrame.DisplaySpinner();
            var negotiation = widget.getValues();

            $.ajax({
                type: "POST",
                dataType: 'json',
                contentType: 'application/json',
                url: '@Url.Action("ProcessResponse", "NegotiationResponse")',
                data: JSON.stringify(negotiation)
            })
                .always(function(result) {
                    if (spinner !== null) {
                        spinner.hide();
                    }

                    if (result === undefined || result === null || result.responseText === undefined || result.responseText === null) {
                        alert('An error occured on the server. Your changes have not been saved.');
                    } else {
                        $(function () {
                            Kwasant.IFrame.Display('ThankYouView',
                            {
                                modal: true,
                                callback: function (result) {
                                    if (result)
                                        close();
                                },
                                height: 160
                            });
                        }());
                    }
                });
        }

        $(function() {
            $('#email').load(function() {
                var iframeDoc = $(this).contents();
                var that = $(this);
                var reposition = function() {
                    var iframeHeight = iframeDoc.get(0).body.offsetHeight;

                    that.css('height', iframeHeight + 'px');
                    that.css('minHeight', iframeHeight + 'px');
                };
                reposition();
            });
        });
    </script>
}
@section scripts
{
    @Scripts.Render("~/bundles/js/modernizr")
    @Scripts.Render("~/bundles/js/bootstrap")
}
@section styles
{
    @Styles.Render("~/bundles/css/bootstrap30")
@Styles.Render("~/bundles/css/select2")
    @Styles.Render("~/bundles/css/backendcss")

    <style type="text/css">
        .wrapperBox {
            -webkit-box-shadow: 0px 0px 54px 10px rgba(0,0,0,0.75);
            -moz-box-shadow: 0px 0px 54px 10px rgba(0,0,0,0.75);
            box-shadow: 0px 0px 54px 10px rgba(0,0,0,0.75);
            width: 50%;
            margin: auto;
            padding: 15px;
        }
         .ourBox {
             width: 100%;
             margin: 0 auto;
         }

        .negotiationsidebar .answerBox {
            margin: 10px 40PX;
        }
        .form-control[disabled], .form-control[readonly], fieldset[disabled] .form-control {
            background-color: transparent !important;
            border: none !important;
            box-shadow: none !important;
        }

        .Heading-text h2 {
            font-size: 1.5em;

        }
        .QuesText {
            font-size:20px;
        }
        iframe {
            width: 100%;
            display: block;
            margin: auto;
            border: none;
        }
    </style>
}



<div style="padding:15px;">
    <div class="wrapperBox">
        <form id=" f" class="negotiationsidebar ourBox">
            <table class="Heading-text">
                <tr>
                    <td>
                        <h2>
                            @Html.Raw(
                                Model.CommunicationMode == CommunicationMode.Direct
                                    ? "Regarding " + Model.Name + ", please clarify the following"
                                    : "Kwasant helps " + Model.OriginatingUser + " with calendar scheduling. <br />Please give us the following information:")
                        </h2>
                    </td>
                    <td> <img class="floating" src="/Content/img/site/perfect-krawsant.png" alt="Kwasant" title="Kwasant" height="50px"> </td>
                </tr>

            </table>

            <div id="negotiation"></div>

            <div class="space form-actions negotiation-form-actions" style="display:inline-block;width:100%;">
                <input id="btnSave" type="button" value="OK" class="btn small-dialog-button shadow-button pull-left" onclick="submitResponse()" />

            </div>
        </form>
        <hr style="border-top: 1px solid #D3B9B9; margin-top:15px;margin-bottom: 30px; ">
        <iframe id="email" src="/Email/GetInfo?emailID=@Model.BookingRequestID&readonlyView=true"></iframe>
    </div>
</div>
