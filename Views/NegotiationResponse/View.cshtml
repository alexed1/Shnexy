@model KwasantWeb.ViewModels.NegotiationVM
@{ Layout = "~/Views/Shared/_Layout.cshtml"; }
@section immediateScripts
{
    @Scripts.Render("~/bundles/js/jquery")
    @Scripts.Render("~/bundles/js/select2")
    
    @Scripts.Render("~/bundles/js/jqueryvalidate")
    

    <script src="/Content/js/common.js" type="text/javascript"></script>
    <script src="/Content/js/Kwasant/Popup.js"></script>
    <link rel="stylesheet" type="text/css" href="/Content/css/NegotiationWidgets.css" />

    <script src="/Content/js/Kwasant/NegotiationWidgets.js" type="text/javascript"></script>

    <script type="text/javascript">
        var widget;
        $(function() {
            var settings = {
                DisplayMode: 'view',

                MaxAdditionalAnswers: 1,

                AllowModifyNegotiationRequest: false,

                AllowAddQuestion: false,
                AllowModifyQuestion: false,
                AllowDeleteQuestion: false,

                AllowAddAnswer: true,
                AllowModifyAnswer: false,
                AllowDeleteAnswer: false,
            };

            var questions = [
            ];

            var answers;
            var currentQuestion;
            var currentAnswer;
            var calendarEvents;
            @{
                foreach (var question in Model.Questions)
                {
                    @:currentQuestion = {};
                    @:currentQuestion.Id = @question.Id
                    @:currentQuestion.Text = '@question.Text';
                    @:currentQuestion.Type = '@question.AnswerType';
                    @:answers = [];
                    foreach (var answer in question.Answers)
                    {
                        @:currentAnswer = {};
                        @:currentAnswer.Id = @answer.Id
                        @:currentAnswer.Selected = @Html.Raw(answer.Selected ? "true" : "false");
                        if (question.AnswerType == "Text")
                        {
                            @:currentAnswer.Text = '@answer.Text';
                        }
                        if (question.AnswerType == "Timeslot")
                        {
                            @:calendarEvents = [];
                            foreach (var calendarEvent in answer.CalendarEvents)
                            {
                                @:var startDate = new Date(@calendarEvent.StartDate.Year, (@calendarEvent.StartDate.Month - 1), @calendarEvent.StartDate.Day, @calendarEvent.StartDate.Hour, @calendarEvent.StartDate.Minute, @calendarEvent.StartDate.Millisecond)
                                @:var endDate = new Date(@calendarEvent.EndDate.Year, (@calendarEvent.EndDate.Month - 1), @calendarEvent.EndDate.Day, @calendarEvent.EndDate.Hour, @calendarEvent.EndDate.Minute, @calendarEvent.EndDate.Millisecond)

                                @:calendarEvents.push({
                                @:  startDate: startDate,
                                @:  endDate: endDate
                                @:});
                            }
                            @:currentAnswer.CalendarEvents = calendarEvents;
                            @:currentAnswer.CalendarID = @answer.CalendarID;
                            //Add event windows here... 
                        }
                        @:currentAnswer.QuestionID = @question.Id;

                        @:answers.push(currentAnswer);
                    }
                    @:currentQuestion.Answers = answers;
                    @:questions.push(currentQuestion);
                }
            }

            var initialValues = {
                Id: @(Model.Id == null ? "null" : Model.Id.ToString()),
                BookingRequestID: @Model.BookingRequestID,
                Name: '@Model.Name',
                Attendees: [@Html.Raw(String.Join(",", Model.Attendees.Where(a => !String.IsNullOrEmpty(a)).Select(a => "'" + a + "'")))],
                Questions: questions
            };


            widget = $('#negotiation').NegotiationWidget(settings, initialValues);
        });

        function submitResponse() {
            var spinner = Kwasant.IFrame.DisplaySpinner();
            var negotiation = widget.getValues();

            $.ajax({
                type: "POST",
                dataType: 'json',
                contentType: 'application/json',
                url: '@Url.Action("ProcessResponse", "NegotiationResponse")',
                data: JSON.stringify(negotiation)
            })
                .always(function(result) {
                    if (spinner !== null) {
                        spinner.hide();
                    }

                    if (result === undefined || result === null || result.responseText === undefined || result.responseText === null) {
                        alert('An error occured on the server. Your changes have not been saved.');
                    } else {
                        var newDoc = document.open("text/html", "replace");
                        newDoc.write(result.responseText);
                        newDoc.close();
                    }
                });
        }
    </script>
}
@section scripts
{
    @Scripts.Render("~/bundles/js/modernizr")
    @Scripts.Render("~/bundles/js/bootstrap")
}
@section styles
{
    @Styles.Render("~/bundles/css/bootstrap30")
@Styles.Render("~/bundles/css/select2")
    @Styles.Render("~/bundles/css/backendcss")

}

<h2>We need clarification about the following to finish booking your event:</h2>
<form id="f" class="negotiationsidebar">
    <div id="negotiation"></div>

    <div class="space form-actions negotiation-form-actions">
        <input id="btnSave" type="button" value="OK" class="btn btn-default pull-left" onclick="submitResponse()" />

        <a href="javascript:close();" class="cancel-btn pull-left">Cancel</a>
    </div>
</form>