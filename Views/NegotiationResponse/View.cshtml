@model KwasantWeb.ViewModels.NegotiationVM
@{ Layout = "~/Views/Shared/_Layout.cshtml"; }
@section immediateScripts
{
    @Scripts.Render("~/bundles/js/jquery")
    @Scripts.Render("~/bundles/js/select2")
    
    @Scripts.Render("~/bundles/js/jqueryvalidate")
    

    <script src="/Content/js/common.js" type="text/javascript"></script>
    <script src="/Content/js/Kwasant/Popup.js"></script>
    <link rel="stylesheet" type="text/css" href="/Content/css/NegotiationWidgets.css" />

    <script src="/Content/js/Kwasant/NegotiationWidgets.js" type="text/javascript"></script>

    <script type="text/javascript">
        var widget;
        $(function() {
            var settings = {
                DisplayMode: 'reply',

                MaxAdditionalAnswers: 1,

                AllowModifyNegotiationRequest: false,

                AllowAddQuestion: false,
                AllowModifyQuestion: false,
                AllowDeleteQuestion: false,

                AllowAddAnswer: true,
                AllowModifyAnswer: false,
                AllowDeleteAnswer: false,
            };

            var questions = [
            ];

            var answers;
            var currentQuestion;
            var currentAnswer;
            var calendarEvents;
            @{
                foreach (var question in Model.Questions)
                {
                    @:currentQuestion = {};
                    @:currentQuestion.Id = @question.Id
                    @:currentQuestion.Text = '@question.Text';
                    @:currentQuestion.Type = '@question.AnswerType';
                    @:currentQuestion.CalendarID = @Html.Raw(question.CalendarID == null ? "null" : question.CalendarID.ToString());
                    @:answers = [];
                    foreach (var answer in question.Answers)
                    {
                        @:currentAnswer = {};
                        @:currentAnswer.Id = @answer.Id
                        @:currentAnswer.Selected = @Html.Raw(answer.Selected ? "true" : "false");
                        if (question.AnswerType == "Text")
                        {
                            @:currentAnswer.Text = '@answer.Text';
                        }
                        
                        @:currentAnswer.EventID = @answer.EventID
                        if (answer.EventStartDate.HasValue)
                        {
                            @:currentAnswer.EventStart = new Date(@answer.EventStartDate.Value.Year, (@answer.EventStartDate.Value.Month - 1), @answer.EventStartDate.Value.Day, @answer.EventStartDate.Value.Hour, @answer.EventStartDate.Value.Minute, @answer.EventStartDate.Value.Millisecond)
                        }
                        if (answer.EventEndDate.HasValue)
                        {
                            @:currentAnswer.EventEnd = new Date(@answer.EventEndDate.Value.Year, (@answer.EventEndDate.Value.Month - 1), @answer.EventEndDate.Value.Day, @answer.EventEndDate.Value.Hour, @answer.EventEndDate.Value.Minute, @answer.EventEndDate.Value.Millisecond)
                        }

                        @:answers.push(currentAnswer);
                    }
                    @:currentQuestion.Answers = answers;
                    @:questions.push(currentQuestion);
                }
            }

            var initialValues = {
                Id: @(Model.Id == null ? "null" : Model.Id.ToString()),
                BookingRequestID: @Model.BookingRequestID,
                Name: '@Model.Name',
                Attendees: [@Html.Raw(String.Join(",", Model.Attendees.Where(a => !String.IsNullOrEmpty(a)).Select(a => "'" + a + "'")))],
                Questions: questions
            };


            widget = $('#negotiation').NegotiationWidget(settings, initialValues);
        });

        function submitResponse() {
            var spinner = Kwasant.IFrame.DisplaySpinner();
            var negotiation = widget.getValues();

            $.ajax({
                type: "POST",
                dataType: 'json',
                contentType: 'application/json',
                url: '@Url.Action("ProcessResponse", "NegotiationResponse")',
                data: JSON.stringify(negotiation)
            })
                .always(function(result) {
                    if (spinner !== null) {
                        spinner.hide();
                    }

                    if (result === undefined || result === null || result.responseText === undefined || result.responseText === null) {
                        alert('An error occured on the server. Your changes have not been saved.');
                    } else {
                        var newDoc = document.open("text/html", "replace");
                        newDoc.write(result.responseText);
                        newDoc.close();
                    }
                });
        }
    </script>
}
@section scripts
{
    @Scripts.Render("~/bundles/js/modernizr")
    @Scripts.Render("~/bundles/js/bootstrap")
}
@section styles
{
    @Styles.Render("~/bundles/css/bootstrap30")
@Styles.Render("~/bundles/css/select2")
    @Styles.Render("~/bundles/css/backendcss")

    <style type="text/css">
        .ourBox {
            padding: 15px;
            width: 630px;
            margin: 0 auto;
            -webkit-box-shadow: 0px 0px 54px 10px rgba(0,0,0,0.75);
            -moz-box-shadow: 0px 0px 54px 10px rgba(0,0,0,0.75);
            box-shadow: 0px 0px 54px 10px rgba(0,0,0,0.75);
        }
                                                                                                               
    </style>
}



<div style="padding:15px;">
    <form id="f" class="negotiationsidebar ourBox">
        <h2>We need clarification about the following <br />to finish booking your event</h2>
        <div id="negotiation"></div>

        <div class="space form-actions negotiation-form-actions" style="display:inline-block">
            <input id="btnSave" type="button" value="OK" class="btn btn-default pull-left" onclick="submitResponse()" />
        </div>
    </form>
</div>