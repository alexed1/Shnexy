@using KwasantWeb.AlertQueues
<script src="/Content/js/notify.js"></script>

<script type="text/javascript">
    PollNewBookingRequestEnabled = true;
    PollBookingRequestResponseEnabled = true;

    var notify = $.notify;
    
    var pollTimeInSeconds = 5;

    function registerPolling() {
        pollNewBookingRequest();
        pollBookingRequestResponse();
        pollHighPriorityIncident();
    }

    function getUpdateForPage(eventName, objectID, callback) {
        $.post(
            '/Alerting/RegisterInterestInPageUpdates',
            {
                eventName: eventName,
                objectID: objectID
            },
            function (guid) {

                var interval = setInterval(function () {
                    $.post(
                        '/Alerting/RequestUpdate',
                        { guid: guid },
                        function (result) {
                            if (callback)
                                callback(result);
                        }
                    ).fail(function (a) {
                        //If our guid is rejected, stop polling
                        if (a.status === 400) {
                            clearInterval(interval);
                        }
                        squelchErrors.push(a); //Don't show this error, the query is not critical
                    });
                }, pollTimeInSeconds * 1000);
            }
        );
    }

    function getUpdateForUser(eventName, callback) {
        $.post(
            '/Alerting/RegisterInterestInUserUpdates',
            {
                eventName: eventName,
            },
            function (guid) {
                var interval = setInterval(function () {
                    $.post(
                        '/Alerting/RequestUpdateForUser',
                        { guid: guid },
                        function (result) {
                            if (callback)
                                callback(result);
                        }
                    ).fail(function (a) {
                        //If our guid is rejected, stop polling
                        if (a.status === 400) {
                            clearInterval(interval);
                        }
                        squelchErrors.push(a); //Don't show this error, the query is not critical
                    });
                }, pollTimeInSeconds * 1000);
            }
        );
    }

    function getUpdateForRole(eventName, callback) {
        $.post(
            '@Url.Action("RegisterInterestInRoleUpdates", "Alerting")',
            {
                eventName: eventName,
            },
            function (guid) {
                var interval = setInterval(function () {
                    $.post(
                        '@Url.Action("RequestUpdateForRole", "Alerting")',
                        { guid: guid },
                        function (result) {
                            if (callback)
                                callback(result);
                        }
                    ).fail(function (a) {
                        //If our guid is rejected, stop polling
                        if (a.status === 400) {
                            clearInterval(interval);
                        }
                        squelchErrors.push(a); //Don't show this error, the query is not critical
                    });
                }, pollTimeInSeconds * 1000);
            }
        );
    }

    function displayBottomRight(message, options) {
        if (!options)
            options = { };
        if (!options.removeButtonClassName)
            options.removeButtonClassName = "glyphicon glyphicon-remove";
        if (!options.title)
            options.title = 'Message';
        if (!options.style)
            options.style = 'newbookingrequest';
        if (!options.className)
            options.className = 'superblue';
        if (!options.globalPosition)
            options.globalPosition = 'bottom right';

        notify.addStyle('newbookingrequest', {
            html: "<div>" +
                "<div class='clearfix'>" +
                "<div class='customNotification alert alert-warning'>" +
                "<span class='glyphicon glyphicon-exclamation-sign'></span>  " + message +
                "</div>" +
                "</div>" +
                "</div>"
        });

        $(document).on('click', '.notifyjs-newbookingrequest-base', function (ev) {
            if (ev.target.className == options.removeButtonClassName) {
                $(this).trigger('notify-hide');
                if (options.onClose)
                    options.onClose();
            } else {
                if (options.onClick)
                    options.onClick();
            }
        });

        notify(options.title, {
            style: options.style,
            className: options.className,
            autoHide: false,
            clickToHide: false,
            globalPosition: options.globalPosition
        });
    }

    function pollNewBookingRequest() {
        if (PollNewBookingRequestEnabled) {
            getUpdateForUser('@SharedAlertQueues.StrBookingRequestReservedForUserQueue', function (result) {
                $.each(result, function (ind, row) {
                    var message = 'A new booking request has been assigned to you!  <span style="margin-left:5px" class="glyphicon glyphicon-remove"></span></br> Click here to take a look.';

                    displayBottomRight(message, {
                        onClick: function() {
                            location.href = '/Dashboard/Index?id=' + row.BookingRequestID;
                        }
                    });
                });
            });
        }   
    }
    
    function pollBookingRequestResponse() {
        if (PollBookingRequestResponseEnabled) {
            getUpdateForUser('@SharedAlertQueues.StrPollBookingRequestResponseQueue', function (result) {
                $.each(result, function (ind, row) {
                    var message = 'A booking request has recieved a new response.  <span style="margin-left:5px" class="glyphicon glyphicon-remove"></span></br> Click here to take a look.';

                    displayBottomRight(message, {
                        onClick: function() {
                            location.href = '/Dashboard/Index?id=' + row.BookingRequestID;
                        }
                    });
                });
            });
        }
    }

    function pollHighPriorityIncident() {
        if (PollBookingRequestResponseEnabled) {
            getUpdateForRole('@SharedAlertQueues.StrHighPriorityIncidentsQueue', function (result) {
                $.each(result, function (ind, row) {
                    var message = 'New high priority incident has occurred!  <span style="margin-left:5px" class="glyphicon glyphicon-remove"></span></br> Click here to take a look.';

                    displayBottomRight(message, {
                        onClick: function () {
                            location.href = '/Report?type=incident';
                        },
                        className: 'new-incident'
                    });
                });
            });
        }
    }
</script>
