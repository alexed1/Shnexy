@using Newtonsoft.Json
@model KwasantWeb.ViewModels.BookingRequestAdminVM
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }
@Styles.Render("~/bundles/css/bootstrap30")
@Styles.Render("~/bundles/css/backendcss")
@Styles.Render("~/bundles/css/colorbox")
@Styles.Render("~/bundles/css/temp")
<script src="~/Scripts/ContextMenu/jquery.contextMenu.js"></script>
<link href="~/Content/ContextMenu/jquery.contextMenu.css" rel="stylesheet" />
<div class="email-info-section">
    <!--style="width: 400px;"-->
    <div class="info">
        <div id="emailSubject" class="subHeading email-subject">
            <h4 class="with-border">@Model.Subject</h4>
        </div>
        <div class="email-details with-border">
            <table width="100%">
                <tr>
                    <td class="displayLabel">Booker:</td>
                    <td id="tdbookerinfo">
                        @Model.Booker
                        @(Model.Booker != "none" ? Html.Raw("<span style='padding-left:15px;'><a href='javascript:void(0);' onclick='javascript:releaseBooker(" + Model.BookingRequestId + ")'>Release</a></span>") : Html.Raw(""))
                    </td>
                </tr>
                <tr>
                    <td class="displayLabel">From:</td>
                    <td>@Model.FromName</td>
                </tr>
                <tr>
                    <td class="displayLabel">To:</td>
                    <td>@Model.EmailTo</td>
                </tr>
                <tr>
                    <td class="displayLabel">CC:</td>
                    <td>@Model.EmailCC</td>
                </tr>
                <tr>
                    <td class="displayLabel">BCC:</td>
                    <td>@Model.EmailBCC</td>
                </tr>

                <tr>
                    <td class="displayLabel">Attachments:</td>
                    <td>@Html.Raw(Model.EmailAttachments)</td>
                </tr>
            </table>
        </div>
        <div id="conversations" class="email-conversations">
        </div>
    </div>
    <div class="context-menu box menu-1"></div>
    <script type="text/javascript">
        function releaseBooker(requestId) {
            $.ajax({
                url: "/BookingRequest/ReleaseBooker",
                type: "POST",
                data: { bookingRequestId: requestId },
                success: function () {
                    $("#tdbookerinfo").html("none");
                }
            });
        }
    </script>
</div>

<script src="~/Content/js/Kwasant/quickcopy.js"></script>
<script type="text/javascript">
    $(function () {
        var conversationMembers = @Html.Raw(JsonConvert.SerializeObject(Model.Conversations, Formatting.Indented));
        var performedExplicitExpand = false;
        $.each(conversationMembers, function(ind, conversationMember) {
            var convoHolder = $('<div class="email-message">');
   
            var convoHeader = $('<div class="message-header">');
            convoHeader.html(conversationMember.Header);
            convoHeader.prepend('<span class="glyphicon glyphicon-chevron-down pull-left"></span>');

            var convoBody = $('<div>');
            convoBody
                .addClass('email-content');
            convoBody.html(conversationMember.Body);

            var resetStyles = function(expanded) {
                if (expanded) {
                    $(".message-header .glyphicon").removeClass("glyphicon-chevron-right").addClass("glyphicon-chevron-down");    
                    //convoHeader.css('background-color', '#DBDBDB');
                } else {
                    $(".message-header .glyphicon").removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-right");                        
                    //convoHeader.css('background-color', '#DBDBDB');
                }
            };

            var doingAnimation = false;
            var isExpanded = false;
            convoHeader.click(function() {
                if (doingAnimation)
                    return;
                doingAnimation = true;
                if (isExpanded) {
                    convoBody.slideUp(function() { resetStyles(false); });
                    isExpanded = false;
                } else {
                    convoBody.slideDown(function() { resetStyles(true); });
                    isExpanded = true;
                }
                doingAnimation = false;
            });

            //If we explicitly opened other conversations, don't open the last email by default
            if (conversationMember.ExplicitOpen) {
                isExpanded = true;
                resetStyles(true);
                performedExplicitExpand = true;
            } else {
                if (performedExplicitExpand || ind < conversationMembers.length - 1)
                {
                    convoBody.hide();
                } else {
                    isExpanded = true;
                    resetStyles(true);
                }
            }
            
            convoHolder.append(convoHeader);
            convoHolder.append(convoBody);

            $('#conversations').append(convoHolder);
        });

        $('#emailContent').hide();
        $('#blah').click(function() {
            $('#emailContent').slideDown();
        });
    });
</script>