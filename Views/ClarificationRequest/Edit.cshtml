@using Data.Entities.Enumerations
@using Newtonsoft.Json
@model KwasantWeb.ViewModels.ClarificationRequestViewModel
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }
@section immediateScripts
{
    @Scripts.Render("~/bundles/js/jquery")
    @Scripts.Render("~/bundles/js/select2")
    @Scripts.Render("~/bundles/js/moment")
    @Scripts.Render("~/bundles/js/bootstrap-datetimepicker")
    @Scripts.Render("~/bundles/js/jqueryvalidate")

    <script src="/Content/js/Kwasant/Popup.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var data = [@Html.Raw(String.Join(",", Model.Recipients.Split(',').Select(a =>
                                "{id: '" + a + "', text: '" + a + "'}"
                                )))];

                $('#attendeesSel').select2({
                    createSearchChoice: function (term) {
                        return { id: term, text: term };
                    },
                    validateFormat: function (term) {
                        if (!isEmail(term))
                            return "Invalid Email";
                        return null;
                    },
                    multiple: true,
                    data: [],
                    width: '100%',
                });
                $('#attendeesSel').select2('data', data);
            });
    </script>
}
@section scripts
{
    @Scripts.Render("~/bundles/js/modernizr")
    @Scripts.Render("~/bundles/js/bootstrap")
    @Scripts.Render("~/bundles/js/common")
}
@section styles
{
    @Styles.Render("~/bundles/css/bootstrap30")
    @Styles.Render("~/bundles/css/default")
    @Styles.Render("~/bundles/css/select2")
    @Styles.Render("~/bundles/css/bootstrap-datetimepicker")
    <style>
        .glyphicon-calendar:before
        {
            content: "\e109"; /* This was broken in the bootstrap css...?? */
        }

        .formItem
        {
            display: inline-flex;
            width: 100%;
            padding-top: 15px;
        }

        .formLabel
        {
            width: 100px;
            min-width: 100px;
            padding-top: 5px
        }
    </style>
}

<form id="f">
    <h3>
        @Html.Raw(Model.Id == 0 ? "New Clarification Request" : "Editing Clarification Request")
    </h3>
    <hr />
    <div class="formItem">
        <div class="formLabel">
            Enter message for Customer
       
        </div>
        
        <input name="Question" class="form-control col-md-1" value="" required />

    </div>
    
    <div class="formItem">
        <div class="formLabel">
            Attendees
       
        </div>
        <input type="hidden" name="Attendees" id="attendeesSel" />
    </div>
    @{

        <div style="display: none">
            @Html.TextBox("Id", @Model.Id, new { @class = "form-control col-md-1" })
            @Html.TextBox("BookingRequestId", @Model.BookingRequestId, new { @class = "form-control col-md-1" })
        </div>
    }
    <hr />
    <div class="space">
        <div style="clear: both">
            <div style="float: left">
                <input id="btnAddAnotherQuestion" type="submit" value="Add Another Question" style="border: 2px solid black; height: 30px; margin-right: 20px; width: 100px;" />
                <input id="btnSave" type="submit" value="Send" style="border: 2px solid black; height: 30px; margin-right: 20px; width: 100px;" />
            </div>
            <div style="float: left">
                <a href="javascript:checkunsaveddata();">
                    <div style="width: 100px;">Cancel</div>
                </a>
            </div>
        </div>
        <br />
        <br />
    </div>
</form>

<script type="text/javascript">
    var isunsaved = false;
    function checkunsaveddata() {
        if (!isunsaved) {
            close();
        }
        else {
            if (confirm("you are about to lose data, continue?")) {
                isunsaved = false;
                close();
            } else { return false; }
        }
    }

    $(document).ready(function () {
        $(".form-control").change(function () {
            isunsaved = true;
        });
    });

    function close(saved) {
        if (saved === undefined || saved == null)
            saved = false;
        Kwasant.IFrame.CloseMe(saved);
    }

    function postQuestion(url) {
        if (!isunsaved) {
            close();
            return false;
        }

        var f = $("#f");
        if (!f.valid())
            return false;

        var data = @Html.Raw(JsonConvert.SerializeObject(Model));

        return $.post(url, data);
    }

    $("#btnAddAnotherQuestion").click(function () {
        postQuestion('@Url.Action("AddAnotherQuestion", "ClarificationRequest")');
        return false;
    });

    $("#btnSave").click(function () {
        postQuestion('@Url.Action("Send", "ClarificationRequest")');
        return false;
    });

    $(function () {
        $('#f').validate();
    });

</script>